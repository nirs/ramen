#!/usr/bin/env python3

# SPDX-FileCopyrightText: The RamenDR authors
# SPDX-License-Identifier: Apache-2.0

import subprocess
import sys

import drenv
from drenv import commands
from drenv import kubectl


def test(hub):
    with drenv.temporary_kubeconfig("drenv-argocd-start.") as env:
        kubeconfig = env["KUBECONFIG"]
        print(f"Using temporary kubeconfig '{kubeconfig}'")

        # Need switch to argocd ns first, otherwise will hit argocd bug
        # see https://github.com/argoproj/argo-cd/issues/14167
        kubectl.config("use-context", hub, f"--kubeconfig={kubeconfig}")
        kubectl.config(
            "set-context",
            "--current",
            "--namespace=argocd",
            f"--kubeconfig={kubeconfig}",
        )

        deploy_guestbook(hub, env)
        wait_until_guestbook_is_healthy(hub)
        delete_guestbook(hub, env)


def deploy_guestbook(hub, env):
    print(
        f"Deploying application 'guestbook' in namespace 'argocd-test' on cluster {hub}"
    )
    cmd = [
        "argocd",
        "app",
        "create",
        "guestbook",
        "--repo=https://github.com/argoproj/argocd-example-apps.git",
        "--path=guestbook",
        "--dest-server=https://kubernetes.default.svc",
        "--dest-namespace=argocd-test",
        "--sync-option=CreateNamespace=true",
        "--sync-policy=automated",
        f"--kube-context={hub}",
    ]
    for line in commands.watch(*cmd, env=env):
        print(line)


def wait_until_guestbook_is_healthy(hub):
    print("Waiting until application is healthy")
    kubectl.wait(
        "application",
        "guestbook",
        "--for=jsonpath={.status.health.status}=Healthy",
        "--namespace=argocd",
        "--timeout=300s",
        context=hub,
    )


def delete_guestbook(hub, env):
    print("Deleting application 'guestbook'")
    cmd = [
        "argocd",
        "app",
        "delete",
        "guestbook",
        "--yes",
        "--wait",
        f"--kube-context={hub}",
    ]
    for line in commands.watch(*cmd, env=env):
        print(line)

    print("Deleting namespace 'argocd-test'")
    kubectl.delete("ns", "argocd-test", context=hub)


if len(sys.argv) != 4:
    print(f"Usage: {sys.argv[0]} hub cluster1 cluster2")
    sys.exit(1)

test(sys.argv[1])
